version: '3.8'

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DOCKER_POSTGRES_HOST_PORT}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  test_db:
    image: postgres:13
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
    ports:
      - "${DOCKER_POSTGRES_TEST_HOST_PORT}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_TEST_USER}
      - POSTGRES_PASSWORD=${POSTGRES_TEST_PASSWORD}
      - POSTGRES_DB=${POSTGRES_TEST_DB}

  web:
    build:
      context: .
      args:
        UID: ${DOCKER_UID}
        GID: ${DOCKER_GID}
    user: ${DOCKER_UID}:${DOCKER_GID}
    command: ["sh", "-c", "pip install debugpy -t /tmp && python /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 -m uvicorn main:app --host 0.0.0.0 --port ${FASTAPI_RUN_PORT} --reload"]
    volumes:
      - .:/app
    ports:
      - "${FASTAPI_RUN_PORT}:8000"
      - 5678:5678
    env_file:
      - .env
    depends_on:
      - db
      - test_db
      - minio

  mailhog:
    image: mailhog/mailhog:latest
    restart: always
    ports:
      - 1025:1025
      - "${DOCKER_MAILHOG_WEB_HOST_PORT}:8025"

  redis:
    image: redis:latest  # You can specify a specific version here if needed
    restart: always
    ports:
      - "${DOCKER_REDIS_HOST_PORT}:6379"

  minio:
    image: minio/minio
    hostname: minio
    volumes:
      - minio_data:/data
    ports:
      - "${DOCKER_MINIO_HOST_PORT}:9000"
      - "${DOCKER_MINIO_CONSOLE_HOST_PORT}:9001"
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
      - MINIO_DEFAULT_BUCKETS=${AWS_BUCKET_NAME}
    command: server /data --console-address ":9001"

volumes:
  postgres_data:
  test_postgres_data:
  minio_data:
