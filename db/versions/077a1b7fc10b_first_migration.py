"""first migration

Revision ID: 077a1b7fc10b
Revises: 
Create Date: 2023-12-11 16:31:23.374087

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '077a1b7fc10b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('email_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('subject', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('html_body', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('email_variables',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('variable', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sa.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('email_templates_email_variables',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email_template_id', sa.Integer(), nullable=False),
    sa.Column('email_variable_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['email_template_id'], ['email_templates.id'], ),
    sa.ForeignKeyConstraint(['email_variable_id'], ['email_variables.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password_hash', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sa.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('surname', sa.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sa.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('photo_path', sa.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    # Create unaccent extension
    op.execute("CREATE EXTENSION IF NOT EXISTS unaccent;")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP EXTENSION IF EXISTS unaccent;")

    op.drop_table('users_roles')
    op.drop_table('users')
    op.drop_table('roles_permissions')
    op.drop_table('email_templates_email_variables')
    op.drop_table('roles')
    op.drop_table('permissions')
    op.drop_table('email_variables')
    op.drop_table('email_templates')
    op.drop_table('countries')
    # ### end Alembic commands ###
